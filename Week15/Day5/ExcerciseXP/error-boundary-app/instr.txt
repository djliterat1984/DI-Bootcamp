Exercise 1 : React Error Boundary Simulation
Review

Error boundaries catch errors during rendering, in lifecycle methods, and in constructors of the whole tree below them.
We will catch JavaScript errors anywhere in child component tree, log those errors, and display a fallback UI instead of the component tree that crashed.

Check the demo here

Instructions
In the App.js file create a class component named BuggyCounter.

This component :
will hold a counter property in the state. The counter value starts at 0.
will render the counter. Every time the users clicks on it, the function handleClick() will be called, and add +1 to the counter property.

If the counter reaches 5, you will throw an error ‘I crashed!’

In another Javascript file, create the ErrorBoundary class component, it will hold an error property in the state. The error value is set to null.
Use the componentDidCatch lifecycle to set the value of the error property.
Render an error message with some details. (We will use this component to wrap the BuggyCounter component in our below simulations)
Use this below code to show the Error

<details style={{ whiteSpace: 'pre-wrap' }}>
    {this.state.error && this.state.error.toString()}
    <br />
    {this.state.errorInfo.componentStack}
</details>